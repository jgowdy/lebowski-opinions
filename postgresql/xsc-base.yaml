version: "1.0"
package: postgresql-15
opinion_name: xsc-base
purity_level: configure-only

description: |
  PostgreSQL 15 database built for XSC architecture.

  Uses ring-based syscalls for all database operations:
  - WAL writes batched via rings
  - Client connections via ring accept
  - File I/O via async ring submissions
  - Checkpoints without blocking syscalls

  Expected: 20-40% improvement in mixed workloads.

maintainer:
  name: Lebowski + XSC Project
  email: opinions@lebowski.org

tags:
  - xsc
  - database
  - postgresql
  - performance

debian_versions:
  - bookworm

xsc_variant: base

modifications:
  configure_flags:
    add:
      - "--host=x86_64-xsc-linux-gnu"
      - "--build=x86_64-linux-gnu"
      - "--with-openssl"

  env:
    CC: "x86_64-xsc-linux-gnu-gcc"
    CFLAGS: "-O2 -g"
    LDFLAGS: "-lxsc-rt"

  build_deps:
    add:
      - libxsc-rt-dev
      - x86_64-xsc-linux-gnu-gcc
      - libssl-dev

build_notes: |
  PostgreSQL benefits significantly from XSC due to:
  - Heavy fsync usage (WAL, checkpoints)
  - Many concurrent client connections
  - Frequent small I/O operations

performance_notes: |
  Expected improvements:
  - Write-heavy workloads: 30-40% improvement (batched WAL writes)
  - Read workloads: 15-20% improvement (cached reads via rings)
  - Mixed workloads: 20-25% average improvement
  - Checkpoint impact: 50% reduction in stalls

  Best gains on:
  - High transaction rate workloads
  - Many concurrent connections
  - Write-heavy OLTP

configuration_notes: |
  After installation, optimize for XSC in postgresql.conf:

  # XSC works best with these settings
  max_connections = 200
  shared_buffers = 4GB
  effective_cache_size = 12GB
  maintenance_work_mem = 1GB
  checkpoint_completion_target = 0.9
  wal_buffers = 16MB
  default_statistics_target = 100
  random_page_cost = 1.1  # XSC makes random I/O cheaper
  effective_io_concurrency = 200  # More concurrent I/O via rings

verification_notes: |
  # No syscalls in postgres binary
  objdump -d /usr/lib/postgresql/15/bin/postgres | grep syscall
  # Empty!

  # Verify during operation
  strace -c -p $(pidof postgres) &
  # Run pgbench
  pgbench -c 10 -j 2 -t 1000 testdb
  # Kill strace and check - should show minimal/no syscalls

references:
  - "https://www.postgresql.org/docs/15/"
  - "XSC ring I/O particularly benefits databases"
